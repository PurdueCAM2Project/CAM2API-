# -*- coding: utf-8 -*-
# Generated by Django 1.10.5 on 2017-06-12 00:39
from __future__ import unicode_literals

import django.contrib.gis.db.models.fields
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='Camera',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('camera_id', models.PositiveIntegerField(unique=True)),
                ('city', models.CharField(max_length=30)),
                ('state', models.CharField(blank=True, max_length=12, null=True)),
                ('country', models.CharField(max_length=50)),
                ('lat', models.FloatField(max_length=100)),
                ('lng', models.FloatField(max_length=100)),
                ('lat_lng', django.contrib.gis.db.models.fields.GeometryField(default=0, geography=True, srid=4326)),
                ('source', models.CharField(max_length=30)),
                ('source_url', models.CharField(max_length=100)),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField()),
                ('camera_type', models.CharField(choices=[(0, 'Non_IP'), (1, 'IP')], default='Non_IP', max_length=10)),
                ('description', models.CharField(max_length=100, null=True)),
                ('is_video', models.BooleanField()),
                ('framerate', models.FloatField(max_length=100, null=True)),
                ('outdoors', models.NullBooleanField()),
                ('indoors', models.NullBooleanField()),
                ('traffic', models.NullBooleanField()),
                ('inactive', models.NullBooleanField()),
                ('resolution_w', models.PositiveIntegerField(null=True)),
                ('resolution_h', models.PositiveIntegerField(null=True)),
                ('object_id', models.PositiveIntegerField(null=True)),
                ('content_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='retrieval_model', to='contenttypes.ContentType')),
            ],
        ),
        migrations.CreateModel(
            name='IP',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip', models.CharField(max_length=44)),
                ('port', models.PositiveIntegerField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Non_IP',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Record',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('permission', models.CharField(max_length=120)),
                ('token', models.CharField(max_length=120)),
            ],
        ),
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(max_length=20)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('last_login', models.DateTimeField(auto_now_add=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name_plural': 'users',
                'abstract': False,
                'verbose_name': 'user',
            },
        ),
    ]
